{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./login.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n  }\n  canActivate() {\n    return this.loginService.checkAuthentication().pipe(tap(isAuthenticated => {\n      if (!isAuthenticated) {\n        this.router.navigate(['/login']);\n      }\n    }));\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.LoginService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["tap","AuthGuard","constructor","loginService","router","canActivate","checkAuthentication","pipe","isAuthenticated","navigate","i0","ɵɵinject","i1","LoginService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\arijs\\Desktop\\Application\\Frontend\\src\\app\\services\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { LoginService } from './login.service';\r\nimport { Observable, tap } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private loginService: LoginService, private router: Router) { }\r\n\r\n    canActivate(): Observable<boolean> | Promise<boolean> | boolean {\r\n        return this.loginService.checkAuthentication().pipe(\r\n          tap((isAuthenticated) => {\r\n            if (!isAuthenticated) {\r\n              this.router.navigate(['/login']);\r\n            }\r\n          })\r\n        );\r\n      }\r\n}\r\n"],"mappings":"AAGA,SAAqBA,GAAG,QAAQ,MAAM;;;;AAKtC,OAAM,MAAOC,SAAS;EAClBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;EAAY;EAE1EC,WAAWA,CAAA;IACP,OAAO,IAAI,CAACF,YAAY,CAACG,mBAAmB,EAAE,CAACC,IAAI,CACjDP,GAAG,CAAEQ,eAAe,IAAI;MACtB,IAAI,CAACA,eAAe,EAAE;QACpB,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAEpC,CAAC,CAAC,CACH;EACH;;AAXOR,SAAS,C;mBAATA,SAAS,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAATd,SAAS,C;SAATA,SAAS;EAAAe,OAAA,EAATf,SAAS,CAAAgB,IAAA;EAAAC,UAAA,EAFN;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}