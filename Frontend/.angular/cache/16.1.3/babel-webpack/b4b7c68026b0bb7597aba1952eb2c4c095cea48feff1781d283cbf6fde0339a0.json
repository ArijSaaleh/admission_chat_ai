{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/interview.service\";\nimport * as i3 from \"src/app/services/question.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../landing/footland/footland.component\";\nfunction InterviewResultComponent_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const answer_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", answer_r1.questionText, \": \", answer_r1.answer, \"\");\n  }\n}\nexport class InterviewResultComponent {\n  constructor(route, interviewService, questionService) {\n    this.route = route;\n    this.interviewService = interviewService;\n    this.questionService = questionService;\n    this.userId = '';\n    this.answers = [];\n  }\n  ngOnInit() {\n    this.userId = this.route.snapshot.paramMap.get('userId') || 'none';\n    this.getInterviewAnswers();\n  }\n  getInterviewAnswers() {\n    this.interviewService.getInterview(this.userId).subscribe(interview => {\n      this.interview = interview;\n      console.log(this.interview);\n      // Accessing questions array\n      const questions = interview.questions;\n      // Accessing question and answer properties\n      questions.forEach(questionObj => {\n        const questionId = questionObj.question._id;\n        const answer = questionObj.answer;\n        console.log('Question:', questionId);\n        console.log('Answer:', answer);\n        this.questionService.getQuestionTextById(questionId).toPromise().then(questionText => {\n          if (questionText) {\n            // Map question text and answer to each question\n            this.answers.push({\n              questionText,\n              answer\n            });\n          } else {\n            console.error(`Question text is undefined for question ID ${questionId}`);\n          }\n        }).catch(error => {\n          console.error(`Error retrieving question text for question ID ${questionId}:`, error);\n        });\n      });\n    }, error => {\n      console.error('Error retrieving interview answers:', error);\n    });\n  }\n}\nInterviewResultComponent.ɵfac = function InterviewResultComponent_Factory(t) {\n  return new (t || InterviewResultComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.InterviewService), i0.ɵɵdirectiveInject(i3.QuestionService));\n};\nInterviewResultComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InterviewResultComponent,\n  selectors: [[\"app-interview-result\"]],\n  decls: 29,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"header\"], [1, \"message\"], [1, \"answers\"], [1, \"answers-list\"], [4, \"ngFor\", \"ngForOf\"], [1, \"footer\"], [\"href\", \"https://www.esprit.tn/\", \"target\", \"_blank\"]],\n  template: function InterviewResultComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"div\", 1)(3, \"h2\");\n      i0.ɵɵtext(4, \"Admission test submitted successfully!\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"p\", 2);\n      i0.ɵɵtext(6, \"Test results will be communicated through your email very soon.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"h3\");\n      i0.ɵɵtext(9, \"Your Answers:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"ul\", 4);\n      i0.ɵɵtemplate(11, InterviewResultComponent_li_11_Template, 2, 2, \"li\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 6)(13, \"p\");\n      i0.ɵɵtext(14, \"This test is powered by \");\n      i0.ɵɵelementStart(15, \"a\", 7);\n      i0.ɵɵtext(16, \"ESPRIT School of Engineering\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(17, \".\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(18, \"br\")(19, \"br\")(20, \"br\")(21, \"br\")(22, \"br\")(23, \"br\")(24, \"br\")(25, \"br\")(26, \"br\")(27, \"br\")(28, \"app-footland\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.answers);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.FootlandComponent],\n  styles: [\"\\n\\n   body[_ngcontent-%COMP%] {\\n    font-family: 'Arial', sans-serif;\\n    background-color: #f5f5f5;\\n    margin: 0;\\n    padding: 0;\\n  }\\n\\n  .container[_ngcontent-%COMP%] {\\n    max-width: 600px;\\n    margin: 0 auto;\\n    padding: 30px;\\n    background-color: #ffffff;\\n    border-radius: 4px;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  }\\n\\n  .header[_ngcontent-%COMP%] {\\n    text-align: center;\\n    margin-bottom: 30px;\\n  }\\n\\n  .header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    font-size: 28px;\\n    color: #003366;\\n    margin: 0;\\n    line-height: 1.3;\\n  }\\n\\n  .message[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n    color: #c00404;\\n    margin-bottom: 20px;\\n  }\\n\\n  .answers[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n  }\\n\\n  .answers[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n    font-size: 20px;\\n    color: #7e0808;\\n    margin: 0;\\n    margin-bottom: 10px;\\n  }\\n\\n  .answers-list[_ngcontent-%COMP%] {\\n    list-style-type: none;\\n    padding: 0;\\n    margin: 0;\\n  }\\n\\n  .answers-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n    font-size: 16px;\\n    color: #666666;\\n    margin-bottom: 10px;\\n  }\\n\\n  .footer[_ngcontent-%COMP%] {\\n    text-align: center;\\n    font-size: 14px;\\n    color: #999999;\\n    margin-top: 30px;\\n  }\\n\\n  .footer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    color: #999999;\\n    text-decoration: none;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaW50ZXJ2aWV3L2ludGVydmlldy1yZXN1bHQvaW50ZXJ2aWV3LXJlc3VsdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJHQUFHLHVCQUF1QjtHQUN2QjtJQUNDLGdDQUFnQztJQUNoQyx5QkFBeUI7SUFDekIsU0FBUztJQUNULFVBQVU7RUFDWjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsd0NBQXdDO0VBQzFDOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGVBQWU7SUFDZixjQUFjO0lBQ2QsU0FBUztJQUNULGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGVBQWU7SUFDZixjQUFjO0lBQ2QsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsZUFBZTtJQUNmLGNBQWM7SUFDZCxTQUFTO0lBQ1QsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UscUJBQXFCO0lBQ3JCLFVBQVU7SUFDVixTQUFTO0VBQ1g7O0VBRUE7SUFDRSxlQUFlO0lBQ2YsY0FBYztJQUNkLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsY0FBYztJQUNkLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxxQkFBcUI7RUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyIgICAvKiBDU1Mgc3R5bGVzIGdvIGhlcmUgKi9cclxuICAgYm9keSB7XHJcbiAgICBmb250LWZhbWlseTogJ0FyaWFsJywgc2Fucy1zZXJpZjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gIH1cclxuXHJcbiAgLmNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBwYWRkaW5nOiAzMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgfVxyXG5cclxuICAuaGVhZGVyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgfVxyXG5cclxuICAuaGVhZGVyIGgyIHtcclxuICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICAgIGNvbG9yOiAjMDAzMzY2O1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMztcclxuICB9XHJcblxyXG4gIC5tZXNzYWdlIHtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGNvbG9yOiAjYzAwNDA0O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcblxyXG4gIC5hbnN3ZXJzIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG5cclxuICAuYW5zd2VycyBoMyB7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBjb2xvcjogIzdlMDgwODtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgfVxyXG5cclxuICAuYW5zd2Vycy1saXN0IHtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgfVxyXG5cclxuICAuYW5zd2Vycy1saXN0IGxpIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGNvbG9yOiAjNjY2NjY2O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcblxyXG4gIC5mb290ZXIge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgY29sb3I6ICM5OTk5OTk7XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gIH1cclxuXHJcbiAgLmZvb3RlciBhIHtcclxuICAgIGNvbG9yOiAjOTk5OTk5O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","answer_r1","questionText","answer","InterviewResultComponent","constructor","route","interviewService","questionService","userId","answers","ngOnInit","snapshot","paramMap","get","getInterviewAnswers","getInterview","subscribe","interview","console","log","questions","forEach","questionObj","questionId","question","_id","getQuestionTextById","toPromise","then","push","error","catch","ɵɵdirectiveInject","i1","ActivatedRoute","i2","InterviewService","i3","QuestionService","selectors","decls","vars","consts","template","InterviewResultComponent_Template","rf","ctx","ɵɵtemplate","InterviewResultComponent_li_11_Template","ɵɵelement","ɵɵproperty"],"sources":["C:\\Users\\arijs\\Desktop\\Application\\Frontend\\src\\app\\interview\\interview-result\\interview-result.component.ts","C:\\Users\\arijs\\Desktop\\Application\\Frontend\\src\\app\\interview\\interview-result\\interview-result.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { InterviewService } from 'src/app/services/interview.service';\nimport { Interview } from 'src/app/model/interview.model';\nimport { QuestionService } from 'src/app/services/question.service';\n\n@Component({\n  selector: 'app-interview-result',\n  templateUrl: './interview-result.component.html',\n  styleUrls: ['./interview-result.component.css']\n})\nexport class InterviewResultComponent implements OnInit {\n  userId: string = '';\n  interview!: Interview;\n  answers: { questionText: string; answer: string; }[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private interviewService: InterviewService,\n    private questionService: QuestionService\n  ) { }\n\n  ngOnInit(): void {\n    this.userId = this.route.snapshot.paramMap.get('userId') || 'none';\n    this.getInterviewAnswers();\n  }\n\n  getInterviewAnswers(): void {\n    this.interviewService.getInterview(this.userId).subscribe(\n      (interview: Interview) => {\n        this.interview = interview;\n        console.log(this.interview);\n        // Accessing questions array\n        const questions = interview.questions;\n        // Accessing question and answer properties\n        questions.forEach((questionObj: any) => {\n          const questionId = questionObj.question._id;\n          const answer = questionObj.answer;\n          console.log('Question:', questionId);\n          console.log('Answer:', answer);\n          this.questionService.getQuestionTextById(questionId).toPromise()\n            .then(questionText => {\n              if (questionText) {\n                // Map question text and answer to each question\n                this.answers.push({ questionText, answer });\n              } else {\n                console.error(`Question text is undefined for question ID ${questionId}`);\n              }\n            })\n            .catch(error => {\n              console.error(`Error retrieving question text for question ID ${questionId}:`, error);\n            });\n        });\n      },\n      (error) => {\n        console.error('Error retrieving interview answers:', error);\n      }\n    );\n  }\n}\n","<body>\n    <div class=\"container\">\n      <div class=\"header\">\n        <h2>Admission test submitted successfully!</h2>\n      </div>\n      <p class=\"message\">Test results will be communicated through your email very soon.</p>\n      <div class=\"answers\">\n        <h3>Your Answers:</h3>\n        <ul class=\"answers-list\">\n          <li *ngFor=\"let answer of answers\">{{ answer.questionText }}: {{ answer.answer }}</li>\n        </ul>\n      </div>\n      <div class=\"footer\">\n        <p>This test is powered by <a href=\"https://www.esprit.tn/\" target=\"_blank\">ESPRIT School of Engineering</a>.</p>\n      </div>\n    </div>\n    <br><br><br><br><br><br><br><br><br><br>\n    <app-footland></app-footland>\n  </body>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}