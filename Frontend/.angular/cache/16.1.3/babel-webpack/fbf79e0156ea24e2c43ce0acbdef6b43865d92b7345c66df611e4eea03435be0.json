{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/interview.service\";\nimport * as i2 from \"@angular/common\";\nfunction DashboardComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const interview_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(interview_r1.questions[0] == null ? null : interview_r1.questions[0].answer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(interview_r1.questions[1] == null ? null : interview_r1.questions[1].answer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(interview_r1.submitted);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 4, interview_r1.createdAt));\n  }\n}\nexport class DashboardComponent {\n  constructor(interviewService) {\n    this.interviewService = interviewService;\n    this.interviews = [];\n  }\n  ngOnInit() {\n    this.getInterviews();\n  }\n  getInterviews() {\n    this.interviewService.getInterviews().subscribe(interviews => {\n      this.interviews = interviews;\n      console.log(interviews);\n    }, error => {\n      console.error('Error fetching interviews:', error);\n    });\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.InterviewService));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 15,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Interviews\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\")(3, \"thead\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"Interview ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Candidate Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Result\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"tbody\");\n      i0.ɵɵtemplate(14, DashboardComponent_tr_14_Template, 10, 6, \"tr\", 0);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.interviews);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.DatePipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","interview_r1","questions","answer","submitted","ɵɵpipeBind1","createdAt","DashboardComponent","constructor","interviewService","interviews","ngOnInit","getInterviews","subscribe","console","log","error","ɵɵdirectiveInject","i1","InterviewService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵtemplate","DashboardComponent_tr_14_Template","ɵɵproperty"],"sources":["C:\\Users\\arijs\\Desktop\\Application\\Frontend\\src\\app\\admin\\dashboard\\dashboard.component.ts","C:\\Users\\arijs\\Desktop\\Application\\Frontend\\src\\app\\admin\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { InterviewService } from 'src/app/services/interview.service';\nimport { Interview } from 'src/app/model/interview.model';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  interviews: Interview[] = [];\n  constructor(private interviewService: InterviewService) {\n\n  }\n  ngOnInit() {\n    this.getInterviews();\n  }\n\n  getInterviews() {\n    this.interviewService.getInterviews()\n      .subscribe(\n        (interviews: Interview[]) => {\n          this.interviews = interviews;\n          console.log(interviews)\n        },\n        (error) => {\n          console.error('Error fetching interviews:', error);\n        }\n      );\n  }\n}\n","<h1>Interviews</h1>\n<table>\n    <thead>\n        <tr>\n            <th>Interview ID</th>\n            <th>Candidate Name</th>\n            <th>Date</th>\n            <th>Result</th>\n        </tr>\n    </thead>\n    <tbody>\n\n        <tr *ngFor=\"let interview of interviews\">\n          \n            <td>{{ interview.questions[0]?.answer }}</td>\n            <td>{{ interview.questions[1]?.answer }}</td>\n            <td>{{ interview.submitted }}</td>\n            <td>{{ interview.createdAt | date }}</td>\n        </tr>\n\n    </tbody>\n</table>"],"mappings":";;;;;ICYQA,EAAA,CAAAC,cAAA,SAAyC;IAEjCD,EAAA,CAAAE,MAAA,GAAoC;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC7CH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAoC;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC7CH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAyB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAClCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAgC;;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAHrCH,EAAA,CAAAI,SAAA,GAAoC;IAApCJ,EAAA,CAAAK,iBAAA,CAAAC,YAAA,CAAAC,SAAA,qBAAAD,YAAA,CAAAC,SAAA,IAAAC,MAAA,CAAoC;IACpCR,EAAA,CAAAI,SAAA,GAAoC;IAApCJ,EAAA,CAAAK,iBAAA,CAAAC,YAAA,CAAAC,SAAA,qBAAAD,YAAA,CAAAC,SAAA,IAAAC,MAAA,CAAoC;IACpCR,EAAA,CAAAI,SAAA,GAAyB;IAAzBJ,EAAA,CAAAK,iBAAA,CAAAC,YAAA,CAAAG,SAAA,CAAyB;IACzBT,EAAA,CAAAI,SAAA,GAAgC;IAAhCJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAU,WAAA,OAAAJ,YAAA,CAAAK,SAAA,EAAgC;;;ADThD,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;IADpC,KAAAC,UAAU,GAAgB,EAAE;EAG5B;EACAC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAA,aAAaA,CAAA;IACX,IAAI,CAACH,gBAAgB,CAACG,aAAa,EAAE,CAClCC,SAAS,CACPH,UAAuB,IAAI;MAC1B,IAAI,CAACA,UAAU,GAAGA,UAAU;MAC5BI,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC;IACzB,CAAC,EACAM,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CACF;EACL;;AApBWT,kBAAkB,C;mBAAlBA,kBAAkB,EAAAZ,EAAA,CAAAsB,iBAAA,CAAAC,EAAA,CAAAC,gBAAA;AAAA;AAAlBZ,kBAAkB,C;QAAlBA,kBAAkB;EAAAa,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR/B/B,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,iBAAU;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACnBH,EAAA,CAAAC,cAAA,YAAO;MAGSD,EAAA,CAAAE,MAAA,mBAAY;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACrBH,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,qBAAc;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACvBH,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,YAAI;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACbH,EAAA,CAAAC,cAAA,UAAI;MAAAD,EAAA,CAAAE,MAAA,cAAM;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAGvBH,EAAA,CAAAC,cAAA,aAAO;MAEHD,EAAA,CAAAiC,UAAA,KAAAC,iCAAA,iBAMK;MAETlC,EAAA,CAAAG,YAAA,EAAQ;;;MARsBH,EAAA,CAAAI,SAAA,IAAa;MAAbJ,EAAA,CAAAmC,UAAA,YAAAH,GAAA,CAAAjB,UAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}