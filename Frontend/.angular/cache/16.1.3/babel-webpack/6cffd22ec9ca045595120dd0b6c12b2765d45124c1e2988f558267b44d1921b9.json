{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ChatService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8000/api'; // Update with your backend API URL\n  }\n\n  sendUserMessage(intent) {\n    const body = {\n      intent: intent\n    };\n    return this.http.post(this.apiUrl + '/chatAudio', body);\n  }\n}\nChatService.ɵfac = function ChatService_Factory(t) {\n  return new (t || ChatService)(i0.ɵɵinject(i1.HttpClient));\n};\nChatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ChatService,\n  factory: ChatService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ChatService","constructor","http","apiUrl","sendUserMessage","intent","body","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\arijs\\Desktop\\Application\\Frontend\\src\\app\\services\\chat.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n  private apiUrl = 'http://localhost:8000/api'; // Update with your backend API URL\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  sendUserMessage(intent: string) {\r\n    const body = { intent: intent };\r\n    return this.http.post<any>(this.apiUrl + '/chatAudio', body);\r\n  }\r\n\r\n  /* sendUserMessage(intent: string) {\r\n     const body = { intent: intent };\r\n     return this.http.post(this.apiUrl + '/chatAudio', body, {\r\n       responseType: 'arraybuffer',\r\n       observe: 'response'\r\n     });\r\n   }*/\r\n}\r\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,2BAA2B,CAAC,CAAC;EAEN;;EAExCC,eAAeA,CAACC,MAAc;IAC5B,MAAMC,IAAI,GAAG;MAAED,MAAM,EAAEA;IAAM,CAAE;IAC/B,OAAO,IAAI,CAACH,IAAI,CAACK,IAAI,CAAM,IAAI,CAACJ,MAAM,GAAG,YAAY,EAAEG,IAAI,CAAC;EAC9D;;AARWN,WAAW,C;mBAAXA,WAAW,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXX,WAAW,C;SAAXA,WAAW;EAAAY,OAAA,EAAXZ,WAAW,CAAAa,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}