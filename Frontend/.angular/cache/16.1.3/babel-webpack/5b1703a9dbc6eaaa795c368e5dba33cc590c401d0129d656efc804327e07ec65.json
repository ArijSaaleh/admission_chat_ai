{"ast":null,"code":"import { catchError, throwError, BehaviorSubject, tap, of, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8000/api/user';\n    this.isAuthenticate = false;\n    this.isAuthenticatedSubject = new BehaviorSubject(false);\n  }\n  login(username, password) {\n    const body = {\n      username,\n      password\n    };\n    return this.http.post(`${this.apiUrl}/login`, body, {\n      withCredentials: true\n    }).pipe(tap(() => {\n      this.isAuthenticate = true;\n      this.isAuthenticatedSubject.next(true);\n    }));\n  }\n  getUsername(userId) {\n    const url = `${this.apiUrl}/username/${userId}`;\n    return this.http.get(url).pipe(map(response => response.username));\n  }\n  getCookie(name) {\n    const cookies = document.cookie;\n    if (cookies) {\n      return cookies;\n    }\n    return '';\n  }\n  isLoggedIn() {\n    return this.isAuthenticate;\n  }\n  logout() {\n    const httpOptions = {\n      withCredentials: true // Include cookies in the request\n    };\n\n    return this.http.post(`${this.apiUrl}/logout`, {}, httpOptions).pipe(tap(() => {\n      this.isAuthenticate = false;\n      this.isAuthenticatedSubject.next(false);\n    }), catchError(error => {\n      console.error('Logout error:', error);\n      return throwError(error);\n    }));\n  }\n  checkAuthentication() {\n    return this.http.get(`${this.apiUrl}/protected`, {\n      withCredentials: true\n    }).pipe(catchError(() => of(false)), tap(isAuthenticated => {\n      this.isAuthenticatedSubject.next(isAuthenticated);\n    }));\n  }\n  isAuthenticated() {\n    return this.isAuthenticatedSubject.asObservable();\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","throwError","BehaviorSubject","tap","of","map","LoginService","constructor","http","apiUrl","isAuthenticate","isAuthenticatedSubject","login","username","password","body","post","withCredentials","pipe","next","getUsername","userId","url","get","response","getCookie","name","cookies","document","cookie","isLoggedIn","logout","httpOptions","error","console","checkAuthentication","isAuthenticated","asObservable","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\arijs\\Desktop\\Application\\Frontend\\src\\app\\services\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, catchError, throwError, BehaviorSubject, tap, of, map } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  private apiUrl = 'http://localhost:8000/api/user';\r\n  private isAuthenticate = false;\r\n  private isAuthenticatedSubject = new BehaviorSubject<boolean>(false);\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    const body = { username, password };\r\n    return this.http.post(`${this.apiUrl}/login`, body, { withCredentials: true })\r\n      .pipe(\r\n        tap(() => {\r\n          this.isAuthenticate = true;\r\n          this.isAuthenticatedSubject.next(true);\r\n        })\r\n      );\r\n  }\r\n \r\ngetUsername(userId: string): Observable<string> {\r\n  const url = `${this.apiUrl}/username/${userId}`;\r\n  return this.http.get<{ username: string }>(url)\r\n    .pipe(\r\n      map(response => response.username)\r\n    );\r\n}\r\n\r\n\r\n  getCookie(name: string): string {\r\n    const cookies = document.cookie\r\n    if (cookies) {\r\n      return cookies;\r\n    }\r\n    return '';\r\n  }\r\n  isLoggedIn(): boolean {\r\n    return this.isAuthenticate;\r\n  }\r\n  logout(): Observable<any> {\r\n    const httpOptions = {\r\n      withCredentials: true // Include cookies in the request\r\n    };\r\n\r\n    return this.http.post<any>(`${this.apiUrl}/logout`, {}, httpOptions)\r\n      .pipe(\r\n        tap(() => {\r\n          this.isAuthenticate = false;\r\n          this.isAuthenticatedSubject.next(false);\r\n        }),\r\n        catchError((error: any) => {\r\n          console.error('Logout error:', error);\r\n          return throwError(error);\r\n        })\r\n      );\r\n  }\r\n  checkAuthentication(): Observable<boolean> {\r\n    return this.http.get<boolean>(`${this.apiUrl}/protected`, { withCredentials: true })\r\n      .pipe(\r\n        catchError(() => of(false)),\r\n        tap((isAuthenticated) => {\r\n          this.isAuthenticatedSubject.next(isAuthenticated);\r\n        })\r\n      );\r\n  }\r\n  isAuthenticated(): Observable<boolean> {\r\n    return this.isAuthenticatedSubject.asObservable();\r\n  }\r\n\r\n}\r\n"],"mappings":"AAEA,SAAqBA,UAAU,EAAEC,UAAU,EAAEC,eAAe,EAAEC,GAAG,EAAEC,EAAE,EAAEC,GAAG,QAAQ,MAAM;;;AAMxF,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,MAAM,GAAG,gCAAgC;IACzC,KAAAC,cAAc,GAAG,KAAK;IACtB,KAAAC,sBAAsB,GAAG,IAAIT,eAAe,CAAU,KAAK,CAAC;EAE5B;EAExCU,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,MAAMC,IAAI,GAAG;MAAEF,QAAQ;MAAEC;IAAQ,CAAE;IACnC,OAAO,IAAI,CAACN,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,MAAM,QAAQ,EAAEM,IAAI,EAAE;MAAEE,eAAe,EAAE;IAAI,CAAE,CAAC,CAC3EC,IAAI,CACHf,GAAG,CAAC,MAAK;MACP,IAAI,CAACO,cAAc,GAAG,IAAI;MAC1B,IAAI,CAACC,sBAAsB,CAACQ,IAAI,CAAC,IAAI,CAAC;IACxC,CAAC,CAAC,CACH;EACL;EAEFC,WAAWA,CAACC,MAAc;IACxB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACb,MAAM,aAAaY,MAAM,EAAE;IAC/C,OAAO,IAAI,CAACb,IAAI,CAACe,GAAG,CAAuBD,GAAG,CAAC,CAC5CJ,IAAI,CACHb,GAAG,CAACmB,QAAQ,IAAIA,QAAQ,CAACX,QAAQ,CAAC,CACnC;EACL;EAGEY,SAASA,CAACC,IAAY;IACpB,MAAMC,OAAO,GAAGC,QAAQ,CAACC,MAAM;IAC/B,IAAIF,OAAO,EAAE;MACX,OAAOA,OAAO;;IAEhB,OAAO,EAAE;EACX;EACAG,UAAUA,CAAA;IACR,OAAO,IAAI,CAACpB,cAAc;EAC5B;EACAqB,MAAMA,CAAA;IACJ,MAAMC,WAAW,GAAG;MAClBf,eAAe,EAAE,IAAI,CAAC;KACvB;;IAED,OAAO,IAAI,CAACT,IAAI,CAACQ,IAAI,CAAM,GAAG,IAAI,CAACP,MAAM,SAAS,EAAE,EAAE,EAAEuB,WAAW,CAAC,CACjEd,IAAI,CACHf,GAAG,CAAC,MAAK;MACP,IAAI,CAACO,cAAc,GAAG,KAAK;MAC3B,IAAI,CAACC,sBAAsB,CAACQ,IAAI,CAAC,KAAK,CAAC;IACzC,CAAC,CAAC,EACFnB,UAAU,CAAEiC,KAAU,IAAI;MACxBC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,OAAOhC,UAAU,CAACgC,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACL;EACAE,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAAC3B,IAAI,CAACe,GAAG,CAAU,GAAG,IAAI,CAACd,MAAM,YAAY,EAAE;MAAEQ,eAAe,EAAE;IAAI,CAAE,CAAC,CACjFC,IAAI,CACHlB,UAAU,CAAC,MAAMI,EAAE,CAAC,KAAK,CAAC,CAAC,EAC3BD,GAAG,CAAEiC,eAAe,IAAI;MACtB,IAAI,CAACzB,sBAAsB,CAACQ,IAAI,CAACiB,eAAe,CAAC;IACnD,CAAC,CAAC,CACH;EACL;EACAA,eAAeA,CAAA;IACb,OAAO,IAAI,CAACzB,sBAAsB,CAAC0B,YAAY,EAAE;EACnD;;AAjEW/B,YAAY,C;mBAAZA,YAAY,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZnC,YAAY,C;SAAZA,YAAY;EAAAoC,OAAA,EAAZpC,YAAY,CAAAqC,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}