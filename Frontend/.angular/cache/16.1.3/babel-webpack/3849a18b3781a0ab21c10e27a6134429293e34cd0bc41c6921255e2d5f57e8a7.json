{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/interview.service\";\nimport * as i2 from \"src/app/services/login.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../sidebar/sidebar.component\";\nfunction DashboardComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const interview_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(interview_r1.candidateName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(interview_r1.submitted);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 3, interview_r1.DateSubmission));\n  }\n}\nexport class DashboardComponent {\n  constructor(interviewService, loginService) {\n    this.interviewService = interviewService;\n    this.loginService = loginService;\n    this.interviews = [];\n  }\n  ngOnInit() {\n    this.getInterviews();\n  }\n  getInterviews() {\n    this.interviewService.getInterviews().subscribe(interviews => {\n      console.log(interviews);\n      interviews.forEach(intObj => {\n        const candidatId = intObj.candidate._id;\n        this.loginService.getUsername(candidatId).subscribe(response => {\n          this.username = response.username;\n          console.log('Username:', this.username);\n        }, error => {\n          console.error('Error retrieving username:', error);\n        });\n        const candidatName = this.username;\n        const submitted = intObj.submitted;\n        const DateSubmission = intObj.createdAt;\n        this.interviews.push({\n          candidatName,\n          submitted,\n          DateSubmission\n        });\n      });\n    }, error => {\n      console.error('Error fetching interviews:', error);\n    });\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.InterviewService), i0.ɵɵdirectiveInject(i2.LoginService));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 17,\n  vars: 1,\n  consts: [[1, \"dashboard\"], [1, \"sidebar\"], [1, \"content\"], [1, \"dashboard-table\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"app-sidebar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"h1\");\n      i0.ɵɵtext(5, \"Interviews\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"table\", 3)(7, \"thead\")(8, \"tr\")(9, \"th\");\n      i0.ɵɵtext(10, \"Candidate Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Submitted\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Date de creation\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"tbody\");\n      i0.ɵɵtemplate(16, DashboardComponent_tr_16_Template, 8, 5, \"tr\", 4);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.interviews);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.SidebarComponent, i3.DatePipe],\n  styles: [\".dashboard-table[_ngcontent-%COMP%] {\\n    width: 100%;\\n    border-collapse: collapse;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .dashboard-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .dashboard-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n    padding: 10px;\\n    border: 1px solid #ddd;\\n  }\\n  \\n  .dashboard-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n    background-color: #f5f5f5;\\n    text-align: left;\\n    font-weight: bold;\\n  }\\n  \\n  .dashboard-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n    text-align: center;\\n  }\\n  \\n  .dashboard-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even) {\\n    background-color: #f9f9f9;\\n  }\\n  \\n  .dashboard-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover {\\n    background-color: #f5f5f5;\\n  }\\n  \\n  h1[_ngcontent-%COMP%] {\\n    font-size: 24px;\\n    margin-bottom: 20px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLHlCQUF5QjtJQUN6QixtQkFBbUI7RUFDckI7O0VBRUE7O0lBRUUsYUFBYTtJQUNiLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixnQkFBZ0I7SUFDaEIsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0UsZUFBZTtJQUNmLG1CQUFtQjtFQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi5kYXNoYm9hcmQtdGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmRhc2hib2FyZC10YWJsZSB0aCxcclxuICAuZGFzaGJvYXJkLXRhYmxlIHRkIHtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gIH1cclxuICBcclxuICAuZGFzaGJvYXJkLXRhYmxlIHRoZWFkIHRoIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgfVxyXG4gIFxyXG4gIC5kYXNoYm9hcmQtdGFibGUgdGJvZHkgdGQge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICBcclxuICAuZGFzaGJvYXJkLXRhYmxlIHRib2R5IHRyOm50aC1jaGlsZChldmVuKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG4gIH1cclxuICBcclxuICAuZGFzaGJvYXJkLXRhYmxlIHRib2R5IHRyOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XHJcbiAgfVxyXG4gIFxyXG4gIGgxIHtcclxuICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","interview_r1","candidateName","submitted","ɵɵpipeBind1","DateSubmission","DashboardComponent","constructor","interviewService","loginService","interviews","ngOnInit","getInterviews","subscribe","console","log","forEach","intObj","candidatId","candidate","_id","getUsername","response","username","error","candidatName","createdAt","push","ɵɵdirectiveInject","i1","InterviewService","i2","LoginService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","DashboardComponent_tr_16_Template","ɵɵproperty"],"sources":["C:\\Users\\arijs\\Desktop\\Application\\Frontend\\src\\app\\admin\\dashboard\\dashboard.component.ts","C:\\Users\\arijs\\Desktop\\Application\\Frontend\\src\\app\\admin\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { InterviewService } from 'src/app/services/interview.service';\nimport { Interview } from 'src/app/model/interview.model';\nimport { LoginService } from 'src/app/services/login.service';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  interviews: {candidatName: string, submitted: string, DateSubmission:string}[] = [];\n  username!:string\n  constructor(private interviewService: InterviewService, private loginService: LoginService) {\n\n  }\n  ngOnInit() {\n    this.getInterviews();\n  }\n\n  getInterviews() {\n    this.interviewService.getInterviews()\n      .subscribe(\n        (interviews: Interview[]) => {\n          console.log(interviews)\n          interviews.forEach((intObj: any) => {\n            const candidatId = intObj.candidate._id\n            this.loginService.getUsername(candidatId).subscribe(\n              response => {\n                this.username = response.username;\n                console.log('Username:', this.username);\n              },\n              error => {\n                console.error('Error retrieving username:', error);\n              }\n            );\n            const candidatName = this.username\n            const submitted = intObj.submitted\n            const DateSubmission = intObj.createdAt\n            this.interviews.push({candidatName, submitted ,DateSubmission})\n          });\n        },\n        (error) => {\n          console.error('Error fetching interviews:', error);\n        }\n      );\n  }\n}\n","<div class=\"dashboard\">\n    <div class=\"sidebar\">\n      <app-sidebar></app-sidebar>\n    </div>\n    <div class=\"content\">\n      <h1>Interviews</h1>\n      <table class=\"dashboard-table\">\n        <thead>\n          <tr>\n            <th>Candidate Name</th>\n            <th>Submitted</th>\n            <th>Date de creation</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let interview of interviews\">\n            <td>{{ interview.candidateName }}</td>\n            <td>{{ interview.submitted }}</td>\n            <td>{{ interview.DateSubmission | date }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}